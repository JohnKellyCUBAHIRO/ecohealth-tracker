import { DataE, DataI, DataR, ComsumptionR, ConsumptionT } from "./types";
/**
 * Transform raw data factors from ADEME to the ones used by the calculator
 *
 * @param dataR the raw data coming from the .json referenced sources
 *
 * @return the factors computed (averages/sums) to be used by the calculator
 */
export declare const buildData: (dataR: DataR) => DataI;
export default class Food {
    private avgEmission;
    private data;
    private dataSet;
    /**
     * @warning use the static build method using dataset enum type DataE
     */
    constructor(dataSet: DataE, data: DataI);
    /**
     * Create a calculator instance from dataset
     *
     * @return new House calculator - Throw error if dataset not loaded.
     */
    static build(dataset: DataE): Food;
    /**
     * Return the current data constants loaded
     *
     * @return constant data loaded
     */
    getData: () => DataI;
    /**
     * Return the inner data set name
     *
     * @return constant data loaded
     */
    getDataset: () => DataE;
    /**
     * Compute a rough co2 estimation from eating habits in kgCO2e/year
     *
     * @description
     * Your food carbon footprint is by design a best estimate.
     * This approximation still allows you to get an order of magnitude and act.
     *
     * The formulat we use is as simple as (where frequency is given by week) :
     *
     * emission = SUM[(weaklyConsumed * averageWeight * 52) / 1000 * carbonEmissionFactor]
     * [kgCO2e/year] = (52[g/week]) / 1000 * [kgCO2e/kg]
     *
     * waste = SUM[(weaklyConsumed * averageWeight * 52) / 1000 * wasteRatioFactor * wasteEmissionFactor]
     * [kgCO2e/year] = (52[g/week]) / 1000 * [kgPackaging/kg] * [kgCO2e/kgPackaging]
     *
     * @param consumption - consumed products in meal/week
     *
     * @return
     *   the estimated emission emissions in kgCO2e/year
     *   { -1, -1 } in case of error
     */
    getEmissionEstimated: (consumption: ConsumptionT) => ComsumptionR;
    /**
     * Return the average co2 estimation from eating habits in kgCO2e/year.
     *
     * @description
     * It takes the average adult consumption of different foods expressed in g/day from trusted source.
     * The formulat we use is as simple as (where frequency is given by week) :
     *
     * emission = SUM[(dailyAvg * 365) / 1000 * carbonEmissionFactor]
     * [kgCO2e/year] = (365[g/day]) / 1000 * [kgCO2e/kg]
     *
     * waste = SUM[(daily * 365) / 1000 * wasteRatioFactor * wasteEmissionFactor]
     * [kgCO2e/year] = (365[g/day]) / 1000 * [kgPackaging/kg] * [kgCO2e/kgPackaging]
     *
     * @warning
     * Implementation is defined as a lazy singleton that compute only once.
     *
     * @return
     * The estimated co2 emission in kgCO2e/year
     */
    getEmissionAvg: () => ComsumptionR;
}
