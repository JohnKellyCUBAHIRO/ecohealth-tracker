export declare enum DataE {
    "ADEME_2022" = "ADEME_2022",
    "CCO2_2021" = "CCO2_2021",
    "CCO2_2022" = "CCO2_2022",
    "CITEPA_2021" = "CITEPA_2021",
    "CITEPA_2022" = "CITEPA_2022"
}
export declare enum ClimateE {
    H1 = "H1",
    H2 = "H2",
    H3 = "H3"
}
export declare enum HeaterE {
    urban = "urban",
    electric = "electric",
    fuelOil = "fuelOil",
    gas = "gas",
    coal = "coal",
    heatPump = "heatPump",
    thermalSolar = "thermalSolar",
    propane = "propane",
    wood = "wood"
}
export declare enum HouseE {
    apartment = "apartment",
    house = "house"
}
export declare enum YearE {
    old = "old",
    recent = "recent"
}
export declare type ConsumptionI = {
    emissionFactor: number;
    part: number;
    surface: number;
};
export declare type HeaterI = {
    emissionFactor?: number;
    energyFactor: number;
};
export declare type RegionI = {
    DEP: number;
    NCC: string;
    FACTOR: ClimateE;
};
export declare type HouseT = {
    emission?: number;
    heater: HeaterE;
    built: YearE;
    region?: number;
    surface: number;
    type: HouseE;
};
export declare type ConsumptionFactorsT = {
    [key in keyof typeof YearE]: {
        [key in keyof typeof HouseE]: {
            [key in keyof typeof HeaterE]: ConsumptionI;
        };
    };
};
export declare type DataI = {
    climateCoeffs?: {
        [key in keyof typeof ClimateE]: number;
    };
    emissionFactors: {
        [key in keyof typeof HeaterE]: HeaterI;
    };
    consumptionFactors?: ConsumptionFactorsT;
    regions?: [RegionI];
    study?: {
        apartment?: number;
        house?: number;
        peopleCount: number;
        totalEmission?: number;
    };
};
